* Sesión 0: presentación
* Sesión 1: clases, objetos y referencias (transparencias Tema 1, no en orden)
  - Clase: plantilla para fabricar objetos
  - Objetos: datos en memoria
  - Variables, atributos, parámetros, etc.: referencias
  - Todo realizado con una clases genérica A que es un contenedor de un entero
  - Transparencias tema 1
* Sesión 2: anatomía de una clase (transparencias Tema 1, no en orden)
  - Recordar: una clase es una plantilla para
    fabricar (new) objetos
  - Anatomía:
    - Atributos
    - Métodos
  - Ejemplo Punto2D
    - Empezamos representando el punto con coordenadas cartesianas
    - Aparecen problemas de ámbito de nombres
    - Sin esconder nada (sin modificadores), el código del cliente accede a atributos.
    - Evolucionamos a polares: impacto en el código cliente
* Sesión 3: repaso, terminología, modificadores y modelización (transparencias Tema 1, no en orden)
  - https://github.com/aherranz/programacion2
  - Cerramos el ejemplo y repasamos significados
  - Terminología
    - Clase (a veces tipo, casi nunca plantilla)
    - Objetos (instancias, se crean con new)
    - Atributos (member variables)
    - Métodos (member function)
  - Modificadores (members)
    - Visibilidad: public...
    - Comportamiento: final
    - Ámbito: static
  - Modificadores (classes):
    - Visibilidad
    - Abstract
  - Para qué sirve todo esto: modelización
    - Mente
    - Concepto
    - Implementación
    - Ejemplos: coches (carreras, concesionarios),
      personas, cuentas bancarias, geometría,
      elemento en videojuego (ej. snake),
      zapateria,
** Preguntas
   - Si tengo dos constructores, ¿cuál se ejecuta?
   - En el que encajen los argumentos, pero el
     código del constructor por defecto (el que
     no tiene argumentos) se ejecuta siempre que
     se crea una instancia.
* Sesión 4: Tema 2 (colecciones acotadas)
   - Vemos algún ejemplo de sus modelados
     realizados por los alumnos (15 mins).
   - Revisita explícita: paso de parámetros
     (transparencias)
     - Cómo funciona una llamada a un método?
     - Parámetros: por referencia vs por valor
     - En Java?
     - Explorar transparencias 3 tema 1,
       pg 4-7
   - Tema 3: nos guiamos por las
     transparencias.
   - Ejercicios: ImprimirGuia e
     ImprimirGuiaOrdenada
     - Tu programa tiene que leer órdenes de
       la entrada estándar
     - Dos tipos de órdenes:
       - a {nombre} {teléfono}
       - r {nombre}
     - Añadir y borrar
   - El primero usa conjuntos y el segundo listas
